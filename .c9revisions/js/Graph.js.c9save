{"ts":1357078394541,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Game.Game = new Class({\r\n    initialize: function(){\r\n        this.score = 0;\r\n        this.level = 0;\r\n        this.curLevel = null;\r\n        this.player = new Game.Player();\r\n        // create camera\r\n        var fov = 70.11;\r\n        this.camera    = new THREE.PerspectiveCamera( fov, window.innerWidth / window.innerHeight, 1, 10000 );\r\n        this.camera.position.x = 50;\r\n        this.camera.position.z = 100;\r\n        this.camera.position.y = 20;\r\n        this.camera.lookAt(new THREE.Vector3(0,0,0));\r\n    },\r\n    \r\n    updateScore: function(frames){\r\n        this.score += frames;\r\n    },\r\n    \r\n    \r\n    getCamera: function(){\r\n          return this.camera;\r\n    },\r\n    \r\n    handleCamera: function(){\r\n        var geom = this.player.splineGeometry;\r\n        var playerArcLength = this.player.arcLengthPos;\r\n        var cameraArclength = playerArcLength - 30*this.player.msPerFrame;       // 1 seconds back\r\n        if( cameraArclength < 0)  cameraArclength = 1 + cameraArclength;\r\n        var cameraPos = geom.path.getPointAt( cameraArclength).clone().addSelf( geom.path.getPointAt( playerArcLength).clone().subSelf(this.player.mesh.position).multiplyScalar(-4) );\r\n        this.camera.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\r\n        this.camera.lookAt(this.player.mesh.position);\r\n        \r\n        \r\n    },\r\n    \r\n    resetLevel: function(){\r\n        this.score = 0;\r\n        this.createLevel(this.level);\r\n        \r\n        // update player mesh etc\r\n        this.player.resetLevel(this.curLevel.spline);\r\n    },\r\n    \r\n    initNextLevel: function(){\r\n        this.score = 0;\r\n        this.createLevel(++this.level);\r\n        \r\n        // update player mesh etc\r\n        this.player.initNextLevel(this.curLevel.spline);\r\n    },\r\n    \r\n    createLevel: function(lvl){\r\n        this.removeLevel();\r\n        \r\n        switch(lvl){\r\n            case 1:\r\n                this.curLevel = new Game.Level1();\r\n                break;\r\n            case 2:\r\n                this.curLevel = new Game.Level2();\r\n                break;\r\n            default:\r\n                console.log(this.level + '   is lvl');\r\n        }\r\n        \r\n        // add level to the scene\r\n        representation.scene.add(this.curLevel.spline); \r\n    },\r\n    \r\n    removeLevel: function(){\r\n        if(!this.curLevel) return;\r\n        var blockables = this.curLevel.blockables;\r\n        blockables.each(function(arr, index){\r\n            arr.each(function(obj, index2){\r\n                representation.scene.remove(obj);\r\n            }, this);\r\n        }, this);\r\n        \r\n        representation.scene.remove(this.curLevel.spline);\r\n        \r\n        this.curLevel.blockables = [];\r\n        this.curLevel.spline = [];\r\n        this.curLevel = [];\r\n    }\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":2758}]],"length":2758}
{"contributors":[],"silentsave":false,"ts":1357078413135,"patch":[[{"diffs":[[0,");\r\n"],[-1,"        // create camera\r\n        var fov = 70.11;\r\n        this.camera    = new THREE.PerspectiveCamera( fov, window.innerWidth / window.innerHeight, 1, 10000 );\r\n        this.camera.position.x = 50;\r\n        this.camera.position.z = 100;\r\n        this.camera.position.y = 20;\r\n        this.camera.lookAt(new THREE.Vector3(0,0,0));\r\n    },\r\n    \r\n    updateScore: function(frames){\r\n        this.score += frames;\r\n    },\r\n    \r\n    \r\n    getCamera: function(){\r\n          return this.camera;\r\n    },\r\n    \r\n    handleCamera: function(){\r\n        var geom = this.player.splineGeometry;\r\n        var playerArcLength = this.player.arcLengthPos;\r\n        var cameraArclength = playerArcLength - 30*this.player.msPerFrame;       // 1 seconds back\r\n        if( cameraArclength < 0)  cameraArclength = 1 + cameraArclength;\r\n        var cameraPos = geom.path.getPointAt( cameraArclength).clone().addSelf( geom.path.getPointAt( playerArcLength).clone().subSelf(this.player.mesh.position).multiplyScalar(-4) );\r\n        this.camera.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\r\n        this.camera.lookAt(this.player.mesh.position);\r\n        \r\n"],[0,"    "]],"start1":173,"start2":173,"length1":1151,"length2":8}]],"length":1615,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357158888432,"patch":[[{"diffs":[[0,"       this."],[-1,"score = 0"],[1,"levels = []"],[0,";\r\n        t"]],"start1":55,"start2":55,"length1":33,"length2":35},{"diffs":[[0,"   this."],[-1,"level"],[1,"curLevelIndex"],[0," = 0;\r\n "]],"start1":86,"start2":86,"length1":21,"length2":29}]],"length":1625,"saved":false}
{"ts":1357158967700,"patch":[[{"diffs":[[0,"s.levels = [];\r\n"],[1,"        initLevels();\r\n        \r\n"],[0,"        this.cur"]],"start1":65,"start2":65,"length1":32,"length2":65},{"diffs":[[0,"  },\r\n    \r\n"],[1,"    initLevels: function(){\r\n        var i = 0;\r\n        this.levels[i++] = \"3;1;2;\"\r\n    },\r\n    \r\n"],[0,"    resetLev"]],"start1":232,"start2":232,"length1":24,"length2":124}]],"length":1758,"saved":false}
{"ts":1357159001761,"patch":[[{"diffs":[[0," = n"],[-1,"ull"],[1,"ew Game.Level(this.levels[this.curLevelIndex])"],[0,";\r\n "]],"start1":168,"start2":168,"length1":11,"length2":54}]],"length":1801,"saved":false}
{"ts":1357159005671,"patch":[[{"diffs":[[0,"dex]);\r\n        "],[1,"//"],[0,"this.player = ne"]],"start1":213,"start2":213,"length1":32,"length2":34}]],"length":1803,"saved":false}
{"ts":1357159032684,"patch":[[{"diffs":[[0,"    "],[-1,"resetLevel: function(){\r\n        this.score = 0;\r\n        this.createLevel(this.level);\r\n        \r\n        // update player mesh etc\r\n        this.player.resetLevel(this.curLevel.spline);\r\n    },\r\n    \r\n    initNextLevel: function(){\r\n        this.score = 0;\r\n        this.createLevel(++this.level);\r\n        \r\n        // update player mesh etc\r\n        this.player.initNextLevel(this.curLevel.spline);\r\n    },\r\n    \r\n    createLevel: function(lvl){\r\n        this.removeLevel();\r\n        \r\n        switch(lvl){\r\n            case 1:\r\n                this.curLevel = new Game.Level1();\r\n                break;\r\n            case 2:\r\n                this.curLevel = new Game.Level2();\r\n                break;\r\n            default:\r\n                console.log(this.level + '   is lvl');\r\n        }\r\n        \r\n        // add level to the scene\r\n        representation.scene.add(this.curLevel.spline); \r\n    },\r\n    \r\n    removeLevel: function(){\r\n        if(!this.curLevel) return;\r\n        var blockables = this.curLevel.blockables;\r\n        blockables.each(function(arr, index){\r\n            arr.each(function(obj, index2){\r\n                representation.scene.remove(obj);\r\n            }, this);\r\n        }, this);\r\n        \r\n        representation.scene.remove(this.curLevel.spline);\r\n        \r\n        this.curLevel.blockables = [];\r\n        this.curLevel.spline = [];\r\n        this.curLevel = [];\r\n    }"],[1,"initNextLevel: function(){\r\n        this.score = 0;\r\n        this.createLevel(++this.level);\r\n        \r\n        // update player mesh etc\r\n        this.player.initNextLevel(this.curLevel.spline);\r\n    },\r\n"],[0,"\r\n})"]],"start1":389,"start2":389,"length1":1413,"length2":213}]],"length":603,"saved":false}
{"ts":1357159056945,"patch":[[{"diffs":[[0,"Level: function("],[1,"graphAsStringRepres"],[0,"){\r\n        this"]],"start1":401,"start2":401,"length1":32,"length2":51}]],"length":622,"saved":false}
{"ts":1357159089988,"patch":[[{"diffs":[[0,"    "],[-1,"this.score = 0;\r\n        this.createLevel(++this.level);\r\n        \r\n        // update player mesh etc\r\n        this.player.initNextLevel(this.curLevel.spline);"],[0,"\r\n  "]],"start1":444,"start2":444,"length1":167,"length2":8}]],"length":463,"saved":false}
{"ts":1357159100389,"patch":[[{"diffs":[[0,"init"],[-1,"Next"],[0,"Leve"]],"start1":393,"start2":393,"length1":12,"length2":8}]],"length":459,"saved":false}
{"ts":1357159205865,"patch":[[{"diffs":[[0,"pres){\r\n        "],[1,"this.curLevel = new Game.Level(graphAsStringRepres);"],[0,"\r\n    },\r\n\r\n});"]],"start1":428,"start2":428,"length1":31,"length2":83}]],"length":511,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357164304652,"patch":[[{"diffs":[[0,"Game.G"],[-1,"ame"],[1,"raph"],[0," = new C"]],"start1":0,"start2":0,"length1":17,"length2":18},{"diffs":[[0," Class({"],[1,"            // represents a graph as an adjacency matrix. The graph is symmetric, so we can save some space, if we only store a triangle matrix."],[0,"\r\n    in"]],"start1":16,"start2":16,"length1":16,"length2":160},{"diffs":[[0,"alize: function("],[1,"amountOfVertices"],[0,"){\r\n        this"]],"start1":179,"start2":179,"length1":32,"length2":48},{"diffs":[[0,"his."],[-1,"levels = [];\r\n        initLevels();\r\n        \r\n        this.curLevelIndex = 0;\r\n        this.curLevel = new Game.Level(this.levels[this.curLevelIndex]);\r\n        //this.player = new Game.Player();"],[1,"dim = amountOfVertices;\r\n        this.g = new Array((this.dim*(this.dim+1)) /2);\r\n        for(var i = 0, l = this.g.length; i < l; i++){\r\n            this.g[i] = 0;      // initialize with 0\r\n        }\r\n    },\r\n    \r\n    get: function(i, j){\r\n        //A[i*(i+1)/2+j] i > j\r\n        i--;j--;    // graph starts intern at 0,0 not at 1,1\r\n        if(i<=j){\r\n            return this.g[(j*(j+1))/2 + i];   \r\n        }\r\n        else{\r\n            return this.g[(i*(i+1))/2 + j];   "],[0,"\r\n  "]],"start1":224,"start2":224,"length1":204,"length2":484},{"diffs":[[0,"  \r\n        "],[1,"}"],[0,"\r\n    },\r\n  "]],"start1":702,"start2":702,"length1":24,"length2":25},{"diffs":[[0,"    "],[-1,"initLevels"],[1,"set"],[0,": fu"]],"start1":731,"start2":731,"length1":18,"length2":11},{"diffs":[[0,"unction("],[1,"i, j, val"],[0,"){\r\n    "]],"start1":741,"start2":741,"length1":16,"length2":25},{"diffs":[[0,"    "],[-1,"var i = 0;\r\n        this.levels[i++] = \"3;1;2;\""],[1,"i--;j--;    // graph starts intern at 0,0 not at 1,1\r\n        if(i<=j){\r\n            this.g[i*this.dim + j] = val;   \r\n        }\r\n        else{\r\n            this.g[j*this.dim + i] = val;   \r\n        }"],[0,"\r\n  "]],"start1":766,"start2":766,"length1":55,"length2":208},{"diffs":[[0,"    "],[-1,"initLevel"],[1,"clone"],[0,": fu"]],"start1":986,"start2":986,"length1":17,"length2":13},{"diffs":[[0,"ion("],[-1,"graphAsStringRepres){\r\n        this.curLevel = new Game.Level(graphAsStringRepres)"],[1,"){\r\n        // dirty, because we can't overload constructors/no polymorphism\r\n        var g = new Game.Graph(0);\r\n        g.dim = this.dim;\r\n        g.g = this.g.slice();       // copy whole array\r\n        return g"],[0,";\r\n "]],"start1":1002,"start2":1002,"length1":90,"length2":222}]],"length":1236,"saved":false}
{"ts":1357164322986,"patch":[[{"diffs":[[0,"his."],[-1,"g[i*"],[0,"this."],[-1,"dim + j"],[1,"g[(j*(j+1))/2 + i"],[0,"] = "]],"start1":856,"start2":856,"length1":24,"length2":30},{"diffs":[[0,"s.g["],[-1,"j*this.dim + i"],[1,"(i*(i+1))/2 + j"],[0,"] = "]],"start1":936,"start2":936,"length1":22,"length2":23}]],"length":1243,"saved":false}
{"ts":1357164369659,"patch":[[{"diffs":[[0,"        "],[-1,"this."],[0,"this.g[("]],"start1":847,"start2":847,"length1":21,"length2":16}]],"length":1238,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357666693093,"patch":[[{"diffs":[[0,"re a"],[1," (upper)"],[0," triang"],[-1,"le"],[1,"ular"],[0," mat"]],"start1":147,"start2":147,"length1":17,"length2":27},{"diffs":[[0,"\n    },\r"],[1,"\n    \r\n    join: function(v1,v2){\r\n        \r\n    }\r"],[0,"\n\r\n});"]],"start1":1234,"start2":1234,"length1":14,"length2":65}]],"length":1299,"saved":false}
{"ts":1357666706175,"patch":[[{"diffs":[[0,"\r\n        \r\n"],[1,"    },\r\n    \r\n    cut: function(v1,v2){\r\n        \r\n"],[0,"    }\r\n\r\n});"]],"start1":1275,"start2":1275,"length1":24,"length2":75}]],"length":1350,"saved":false}
{"ts":1357666949914,"patch":[[{"diffs":[[0,"  },\r\n    \r\n"],[1,"    getUpperUnchecked: function(i, j){\r\n        return this.g[(j*(j+1))/2 + i];   \r\n    },\r\n    \r\n"],[0,"    set: fun"]],"start1":729,"start2":729,"length1":24,"length2":122},{"diffs":[[0,"nction(v1,v2){\r\n"],[1,"        // v1 <= v2\r\n"],[0,"        \r\n    },"]],"start1":1359,"start2":1359,"length1":32,"length2":53}]],"length":1469,"saved":false}
{"ts":1357666982413,"patch":[[{"diffs":[[0,"pper"],[-1,"Unchecked"],[0,": fu"]],"start1":749,"start2":749,"length1":17,"length2":8},{"diffs":[[0,"unction(i, j){\r\n"],[1,"        // i has to be <= j <=> gets from upper triangular matrix\r\n"],[0,"        return t"]],"start1":756,"start2":756,"length1":32,"length2":99}]],"length":1527,"saved":false}
{"ts":1357667296268,"patch":[[{"diffs":[[0,"){\r\n"],[-1,"        //A[i*(i+1)/2+j] i > j\r\n"],[1,"//"],[0,"    "]],"start1":477,"start2":477,"length1":40,"length2":10},{"diffs":[[0,"0,0 not at 1,1\r\n"],[1,"//"],[0,"        if(i<=j)"]],"start1":529,"start2":529,"length1":32,"length2":34},{"diffs":[[0,"     if(i<=j){\r\n"],[1,"//"],[0,"            retu"]],"start1":550,"start2":550,"length1":32,"length2":34},{"diffs":[[0,"2 + i];   \r\n"],[1,"//"],[0,"        }\r\n "]],"start1":604,"start2":604,"length1":24,"length2":26},{"diffs":[[0," \r\n//        }\r\n"],[1,"//"],[0,"        else{\r\n "]],"start1":613,"start2":613,"length1":32,"length2":34},{"diffs":[[0,"/        else{\r\n"],[1,"//"],[0,"            retu"]],"start1":630,"start2":630,"length1":32,"length2":34},{"diffs":[[0,"  \r\n"],[-1,"        }\r\n    },\r\n    \r\n    getUpper: function(i, j){\r\n        // i has to be <= j <=> gets from upper triangular matrix\r\n        return this.g[(j*(j+1))/2 + i];   "],[1,"//        }\r\n        if(i<=j){\r\n            return this.g[(j*(j-1))/2 + i - 1];   \r\n        }\r\n        else{\r\n            return this.g[(i*(i-1))/2 + j - 1];   \r\n        }\r\n    },\r\n    \r\n    getUpper: function(i, j){\r\n        // i has to be <= j <=> gets from upper triangular matrix\r\n        return this.g[(j*(j-1))/2 + i - 1];\r\n    }.protect(),\r\n    \r\n    set: function(i, j, val){\r\n        i--;j--;    // graph starts intern at 0,0 not at 1,1\r\n        if(i<=j){\r\n            this.g[(j*(j+1))/2 + i] = val;   \r\n        }\r\n        else{\r\n            this.g[(i*(i+1))/2 + j] = val;   \r\n        }"],[0,"\r\n  "]],"start1":692,"start2":692,"length1":173,"length2":603},{"diffs":[[0,",\r\n    \r\n    set"],[-1,""],[0,""],[1,"Upper"],[0,": function(i, j,"]],"start1":1298,"start2":1298,"length1":32,"length2":37}]],"length":1942,"saved":false}
{"ts":1357667357980,"patch":[[{"diffs":[[0,"on(i, j, val){\r\n"],[1,"//"],[0,"        i--;j--;"]],"start1":1065,"start2":1065,"length1":32,"length2":34},{"diffs":[[0,"0,0 not at 1,1\r\n"],[1,"//"],[0,"        if(i<=j)"]],"start1":1129,"start2":1129,"length1":32,"length2":34},{"diffs":[[0,"     if(i<=j){\r\n"],[1,"//"],[0,"            this"]],"start1":1150,"start2":1150,"length1":32,"length2":34},{"diffs":[[0,"+ i] = val;   \r\n"],[1,"//"],[0,"        }\r\n     "]],"start1":1199,"start2":1199,"length1":32,"length2":34},{"diffs":[[0," \r\n//        }\r\n"],[1,"//"],[0,"        else{\r\n "]],"start1":1212,"start2":1212,"length1":32,"length2":34},{"diffs":[[0,"/        else{\r\n"],[1,"//"],[0,"            this"]],"start1":1229,"start2":1229,"length1":32,"length2":34},{"diffs":[[0,"+ j] = val;   \r\n"],[1,"//        }\r\n        if(i<=j){\r\n            this.g[(j*(j-1))/2 + i - 1] = val;   \r\n        }\r\n        else{\r\n            this.g[(i*(i-1))/2 + j - 1] = val;   \r\n"],[0,"        }\r\n    }"]],"start1":1278,"start2":1278,"length1":32,"length2":192}]],"length":2114,"saved":false}
{"ts":1357667369775,"patch":[[{"diffs":[[0,"){\r\n"],[-1,"        i--;j--;    // graph starts intern at 0,0 not at 1,1\r\n        if(i<=j){\r\n    "],[0,"    "]],"start1":1511,"start2":1511,"length1":93,"length2":8},{"diffs":[[0,"    this.g[(j*(j"],[-1,"+"],[1,"-"],[0,"1))/2 + i] = val"]],"start1":1519,"start2":1519,"length1":33,"length2":33},{"diffs":[[0,"[(j*(j-1))/2 + i"],[1," - 1"],[0,"] = val;   \r\n   "]],"start1":1529,"start2":1529,"length1":32,"length2":36},{"diffs":[[0,";   "],[-1,"\r\n        }\r\n        else{\r\n            this.g[(i*(i+1))/2 + j] = val;   \r\n        }"],[0,"\r\n  "]],"start1":1556,"start2":1556,"length1":92,"length2":8}]],"length":1949,"saved":false}
{"ts":1357667373969,"patch":[[{"diffs":[[0,"= val;   \r\n    }"],[1,".protect()"],[0,",\r\n    \r\n    clo"]],"start1":1551,"start2":1551,"length1":32,"length2":42}]],"length":1959,"saved":false}
{"ts":1357668100075,"patch":[[{"diffs":[[0,"v2\r\n        "],[1,"var dim = this.dim;\r\n        \r\n        // merge edges from rnd to v2 to v1 to rnd\r\n        for(var i = 1; i <= dim; i++){\r\n            if(i === v1 || i === v2) continue;\r\n            \r\n            var tmp = this.get(v2,i);\r\n            if(tmp > 0){\r\n                var tmp = this.\r\n            }\r\n        }"],[0,"\r\n    },\r\n  "]],"start1":1882,"start2":1882,"length1":24,"length2":331}]],"length":2266,"saved":false}
{"ts":1357668325700,"patch":[[{"diffs":[[0,"        "],[-1,"var"],[1,"this.set(v1, i,"],[0," tmp"],[-1," = "],[1,"+"],[0,"this."],[1,"get(v1,i));    // g[v1,i] += tmp"],[0,"\r\n      "]],"start1":2152,"start2":2152,"length1":31,"length2":73}]],"length":2308,"saved":false}
{"ts":1357668343635,"patch":[[{"diffs":[[0,"+= tmp\r\n"],[1,"                this.set(v2, i, 0);\r\n"],[0,"        "]],"start1":2211,"start2":2211,"length1":16,"length2":53}]],"length":2345,"saved":false}
{"ts":1357668470334,"patch":[[{"diffs":[[0,"  }\r\n        }\r\n"],[1,"        // remove self loops\r\n        this.setUpper(v1, v1, 0);\r\n        this.setUpper(v1, v2, 0);\r\n"],[0,"    },\r\n    \r\n  "]],"start1":2266,"start2":2266,"length1":32,"length2":132}]],"length":2445,"saved":false}
{"ts":1357668642070,"patch":[[{"diffs":[[0,"(v1, v1, 0);"],[1,"       // not necessary"],[0,"\r\n        th"]],"start1":2333,"start2":2333,"length1":24,"length2":47},{"diffs":[[0,"(v1, v2, 0);"],[1,"       // not necessary\r\n        \r\n        \r\n        \r\n        "],[0,"\r\n    },\r\n  "]],"start1":2391,"start2":2391,"length1":24,"length2":87}]],"length":2531,"saved":false}
{"ts":1357668666302,"patch":[[{"diffs":[[0,"lf loops"],[1," etc"],[0,"\r\n      "]],"start1":2302,"start2":2302,"length1":16,"length2":20}]],"length":2535,"saved":false}
{"ts":1357668813877,"patch":[[{"diffs":[[0,"){\r\n        "],[1,"this.setUpper(v1, v2, this.getUpper(v1,v2)-1);"],[0,"\r\n    }\r\n\r\n}"]],"start1":2509,"start2":2509,"length1":24,"length2":70}]],"length":2581,"saved":false}
{"ts":1357668961681,"patch":[[{"diffs":[[0,";\r\n    }"],[1,",\r\n    \r\n    log: function(){\r\n        \r\n    }\r\n    \r\n    "],[0,"\r\n\r\n});"]],"start1":2566,"start2":2566,"length1":15,"length2":73}]],"length":2639,"saved":false}
{"ts":1357669012853,"patch":[[{"diffs":[[0,"){\r\n        "],[1,"var s = \"\";\r\n        for(var i = 1; i <= dim; i++){\r\n            for(var j = i+1; j <= dim; j++){         // 1,2 1,3 .. 1,n 2,3 ...\r\n                var tmp = this.getUpper(i,j);\r\n                if(tmp > 0){\r\n                    \r\n                }\r\n            }\r\n        }"],[0,"\r\n    }\r\n   "]],"start1":2601,"start2":2601,"length1":24,"length2":299}]],"length":2914,"saved":false}
{"ts":1357669064496,"patch":[[{"diffs":[[0,"                "],[1,"s += i.toString() + \"-\" + j.toString() + \":\" + tmp.toString();"],[0,"\r\n              "]],"start1":2827,"start2":2827,"length1":32,"length2":94}]],"length":2976,"saved":false}
{"ts":1357669072416,"patch":[[{"diffs":[[0,"String()"],[1," + \"    \""],[0,";\r\n     "]],"start1":2896,"start2":2896,"length1":16,"length2":25}]],"length":2985,"saved":false}
{"ts":1357669079880,"patch":[[{"diffs":[[0,"\n        }\r\n"],[1,"        console.log(s);\r\n"],[0,"    }\r\n    \r"]],"start1":2949,"start2":2949,"length1":24,"length2":49}]],"length":3010,"saved":false}
{"ts":1357669100952,"patch":[[{"diffs":[[0,"      \r\n        "],[1,"this.log();"],[0,"\r\n        \r\n    "]],"start1":2434,"start2":2434,"length1":32,"length2":43}]],"length":3021,"saved":false}
{"ts":1357669118990,"patch":[[{"diffs":[[0,"ar s = \"\";\r\n"],[1,"        var dim = this.dim;\r\n"],[0,"        for("]],"start1":2625,"start2":2625,"length1":24,"length2":53}]],"length":3050,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357768580785,"patch":[[{"diffs":[[0,"tices;\r\n"],[1,"        this.endVertex = this.dim;      // the special end vertex which needs to be connected to vertex 1; it changes with joining vertexes, because the higher one gets joined with the lower one\r\n"],[0,"        "]],"start1":255,"start2":255,"length1":16,"length2":212}]],"length":3246,"saved":false}
{"ts":1357768603854,"patch":[[{"diffs":[[0,"im = this.dim;\r\n"],[1,"        g.endVertex = g.dim;\r\n"],[0,"        g.g = th"]],"start1":1927,"start2":1927,"length1":32,"length2":62}]],"length":3276,"saved":false}
{"ts":1357768686861,"patch":[[{"diffs":[[0,"log();\r\n        "],[1,"if(this.endVertex === v1 || this.endVertex === v2){ // endVertex got joined\r\n            \r\n        }"],[0,"\r\n        \r\n    "]],"start1":2681,"start2":2681,"length1":32,"length2":132}]],"length":3376,"saved":false}
{"ts":1357768817862,"patch":[[{"diffs":[[0,"     if("],[1,"/*"],[0,"this.end"]],"start1":2692,"start2":2692,"length1":16,"length2":18},{"diffs":[[0,"== v1 ||"],[1,"  not needed because, if endVertex = v1 then it would get merged to v1 again*/"],[0," this.en"]],"start1":2718,"start2":2718,"length1":16,"length2":94},{"diffs":[[0,"ed\r\n            "],[1,"this.endVertex = v1;"],[0,"\r\n        }\r\n   "]],"start1":2850,"start2":2850,"length1":32,"length2":52}]],"length":3476,"saved":false}
{"ts":1357769111528,"patch":[[{"diffs":[[0,"le.log(s);\r\n"],[1,"    },\r\n    \r\n    getWinner: function(v1, v2, p1Turn){    // returns 0 if game is not yet over, 1 if join won, and 2 if cut won\r\n        if(p1Turn){\r\n            if(v1 === 1 && this.model.curLevel.graph.endVertex === 1){   // join just joined v1 and v2\r\n                return 1;\r\n            }\r\n        }\r\n        else{   // cut's turn\r\n            // depth search/ breadth search from v1 to v2, if no path exists => cut won\r\n        }\r\n        return 0;\r\n"],[0,"    }\r\n    \r"]],"start1":3440,"start2":3440,"length1":24,"length2":481}]],"length":3933,"saved":false}
{"ts":1357769213669,"patch":[[{"diffs":[[0,"ion("],[-1,"v1, v2, p1Turn"],[0,"){  "]],"start1":3486,"start2":3486,"length1":22,"length2":8},{"diffs":[[0," if("],[-1,"p1Turn){\r\n            if(v1 === 1 && this.model.curLevel.graph"],[1,"v1 === 1 && this"],[0,".end"]],"start1":3574,"start2":3574,"length1":70,"length2":24},{"diffs":[[0,"urn 1;\r\n"],[-1,"            }\r\n"],[0,"        "]],"start1":3665,"start2":3665,"length1":31,"length2":16},{"diffs":[[0," // "],[-1,"cut's turn"],[1,"did cut win?"],[0,"\r\n  "]],"start1":3699,"start2":3699,"length1":18,"length2":20}]],"length":3860,"saved":false}
{"ts":1357769219946,"patch":[[{"diffs":[[0,"            "],[-1,"    "],[0,"return 1;\r\n "]],"start1":3646,"start2":3646,"length1":28,"length2":24}]],"length":3856,"saved":false}
{"ts":1357769283631,"patch":[[{"diffs":[[0," if("],[-1,"v1 === 1 && "],[0,"this"]],"start1":3574,"start2":3574,"length1":20,"length2":8}]],"length":3844,"saved":false}
{"ts":1357769296370,"patch":[[{"diffs":[[0," v1 and "],[-1,"v2"],[1,"endVertex"],[0,"\r\n      "]],"start1":3622,"start2":3622,"length1":18,"length2":25}]],"length":3851,"saved":false}
{"ts":1357769428098,"patch":[[{"diffs":[[0,"  },\r\n    \r\n"],[1,"\r\n    \r\n    getWinner: function(){    // returns 0 if game is not yet over, 1 if join won, and 2 if cut won\r\n        if(this.endVertex === 1){   // join just joined v1 and endVertex\r\n            return 1;\r\n        }\r\n        else{   // did cut win?\r\n            // depth search/ breadth search from v1 to v2, if no path exists => cut won\r\n        }\r\n        return 0;\r\n    },\r\n    \r\n    "],[0,"    log: fun"]],"start1":3008,"start2":3008,"length1":24,"length2":411},{"diffs":[[0,"   }"],[-1,",\r\n    \r\n    getWinner: function(){    // returns 0 if game is not yet over, 1 if join won, and 2 if cut won\r\n        if(this.endVertex === 1){   // join just joined v1 and endVertex\r\n            return 1;\r\n        }\r\n        else{   // did cut win?\r\n            // depth search/ breadth search from v1 to v2, if no path exists => cut won\r\n        }\r\n        return 0;\r\n    }\r\n    \r\n    "],[0,"\r\n\r\n"]],"start1":3840,"start2":3840,"length1":395,"length2":8}]],"length":3851,"saved":false}
{"ts":1357769434707,"patch":[[{"diffs":[[0,"  },\r\n    \r\n"],[-1,"    "],[0,"    log: fun"]],"start1":3391,"start2":3391,"length1":28,"length2":24}]],"length":3847,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357852270829,"patch":[[{"diffs":[[0,"m v1 to "],[-1,"v2"],[1,"endVertex"],[0,", if no "]],"start1":3317,"start2":3317,"length1":18,"length2":25}]],"length":3854,"saved":false}
{"ts":1357852395492,"patch":[[{"diffs":[[0,"  },\r\n    \r\n"],[1,"    findPath: function(v1,v2){\r\n        \r\n    }\r\n    \r\n"],[0,"    log: fun"]],"start1":3398,"start2":3398,"length1":24,"length2":79}]],"length":3909,"saved":false}
{"ts":1357852399685,"patch":[[{"diffs":[[0,"        "],[1,"  "],[0,"\r\n    }"],[1,","],[0,"\r\n    \r\n"]],"start1":3442,"start2":3442,"length1":23,"length2":26}]],"length":3912,"saved":false}
{"ts":1357852931462,"patch":[[{"diffs":[[0,"on(v1,v2"],[-1,"){\r\n          "],[1,", path){    // initialize path with [startVertex]\r\n        if(this.get(v1,v2) > 0){\r\n            path.push(v2);\r\n            return path;\r\n        }\r\n        \r\n        for(var i = 1, l = this.g.dim; i <= l; i++){\r\n            if(this.get(v1, i) > 0){\r\n                var g = this.clone();\r\n                g.set(v1, i, 0);        // remove edge (and other ones) we just stepped on\r\n                \r\n            }\r\n        }"],[0,"\r\n    },"]],"start1":3430,"start2":3430,"length1":30,"length2":441}]],"length":4323,"saved":false}
{"ts":1357853558133,"patch":[[{"diffs":[[0,"    "],[-1,"findPath"],[1,"bfs"],[0,": fu"]],"start1":3410,"start2":3410,"length1":16,"length2":11},{"diffs":[[0,"unction("],[-1,"v1,v2"],[1,"startVertices,vFind"],[0,", path){"]],"start1":3420,"start2":3420,"length1":21,"length2":35},{"diffs":[[0,"itialize"],[1," startVertices with [startVertex],"],[0," path wi"]],"start1":3464,"start2":3464,"length1":16,"length2":50}]],"length":4366,"saved":false}
{"ts":1357854357497,"patch":[[{"diffs":[[0,"unction("],[-1,"startVertice"],[1,"path"],[0,"s,vFind,"]],"start1":3420,"start2":3420,"length1":28,"length2":20},{"diffs":[[0,"i = "],[-1,"1"],[1,"0"],[0,", l = "],[1,"pa"],[0,"th"],[-1,"i"],[0,"s."],[-1,"g.dim"],[1,"length"],[0,"; i <"],[-1,"="],[0," l; "]],"start1":3649,"start2":3649,"length1":31,"length2":32},{"diffs":[[0,"    "],[-1,"if(this.get(v1, i) > 0){\r\n                var g = this.clone();\r\n                g.set(v1, i, 0);        // remove edge (and other ones) we just stepped on"],[1,"var path = paths[i];\r\n            var vPathEnd = path[path.length - 1];\r\n            if(vPathEnd === vFind){    // this is already a finished path (ended in vFind)\r\n                continue;\r\n            }\r\n            \r\n            // unfinished graph\r\n            for(var j = 1, lGraph = this.dim; j <= lGraph; j++){"],[0,"\r\n  "]],"start1":3696,"start2":3696,"length1":163,"length2":326}]],"length":4522,"saved":false}
{"ts":1357854488304,"patch":[[{"diffs":[[0,"   }\r\n        \r\n"],[1,"        var newPaths = [];\r\n"],[0,"        for(var "]],"start1":3617,"start2":3617,"length1":32,"length2":60},{"diffs":[[0,"                "],[1,"for(var k = 0, amountEdges = this.get(vPathEnd, j); k < amountEdges; k++){\r\n                    \r\n                }"],[0,"\r\n            }\r"]],"start1":4048,"start2":4048,"length1":32,"length2":147}]],"length":4665,"saved":false}
{"ts":1357854843909,"patch":[[{"diffs":[[0,"g.slice("],[1,"0"],[0,");      "]],"start1":1992,"start2":1992,"length1":16,"length2":17},{"diffs":[[0,"vFind)\r\n"],[1,"                newPaths.push(path.slice(0));\r\n"],[0,"        "]],"start1":3886,"start2":3886,"length1":16,"length2":63},{"diffs":[[0,"                "],[1,"newPaths.push(path.slice(0).push(j));       // extends amountEdges new paths from vPathEnd to j"],[0,"\r\n              "]],"start1":4192,"start2":4192,"length1":32,"length2":127}]],"length":4808,"saved":false}
{"ts":1357854865917,"patch":[[{"diffs":[[0,"             }\r\n"],[1,"                this.set(vPathEnd, j, 0);\r\n"],[0,"            }\r\n "]],"start1":4308,"start2":4308,"length1":32,"length2":75}]],"length":4851,"saved":false}
{"ts":1357855167568,"patch":[[{"diffs":[[0,"\n    bfs"],[1,"Rec"],[0,": functi"]],"start1":3410,"start2":3410,"length1":16,"length2":19},{"diffs":[[0,"ertex]\r\n"],[-1,""],[0,"        "]],"start1":3520,"start2":3520,"length1":16,"length2":16},{"diffs":[[0,"aths = [];\r\n"],[1,"        var counterAlreadyFoundPaths = 0;\r\n"],[0,"        for("]],"start1":3653,"start2":3653,"length1":24,"length2":67},{"diffs":[[0,"slice(0));\r\n"],[1,"                counterAlreadyFoundPaths++;\r\n"],[0,"            "]],"start1":3975,"start2":3975,"length1":24,"length2":69},{"diffs":[[0,"\n            }\r\n"],[-1,""],[0,"        }\r\n    }"]],"start1":4457,"start2":4457,"length1":32,"length2":32},{"diffs":[[0,"  }\r\n        }\r\n"],[1,"        \r\n        this.bfsRec(newPaths, vFind);\r\n"],[0,"    },\r\n    \r\n  "]],"start1":4468,"start2":4468,"length1":32,"length2":81}]],"length":4991,"saved":false}
{"ts":1357855236575,"patch":[[{"diffs":[[0,"tex]"],[-1,"\r\n        if(this.get(v1,v2) > 0){\r\n            path.push(v2);\r\n            return path;\r\n        }\r\n"],[0,"    "]],"start1":3522,"start2":3522,"length1":109,"length2":8},{"diffs":[[0,"Paths = 0;\r\n"],[1,"        \r\n"],[0,"        for("]],"start1":3595,"start2":3595,"length1":24,"length2":34},{"diffs":[[0,"   }\r\n        \r\n"],[1,"        if(counterAlreadyFoundPaths === paths.length){\r\n            return newPaths;\r\n        }\r\n"],[0,"        this.bfs"]],"start1":4387,"start2":4387,"length1":32,"length2":129}]],"length":4997,"saved":false}
{"ts":1357855288131,"patch":[[{"diffs":[[0,"ths === "],[-1,"p"],[1,"newP"],[0,"aths.len"]],"start1":4435,"start2":4435,"length1":17,"length2":20},{"diffs":[[0,"length){"],[1,"       // no edges to traverse found => we finished searching"],[0,"\r\n      "]],"start1":4452,"start2":4452,"length1":16,"length2":77}]],"length":5061,"saved":false}
{"ts":1357855439456,"patch":[[{"diffs":[[0,"    "],[-1,"}\r\n        return 0"],[1,"    var paths = bfs(1, this.endVertex);\r\n            if(pa)\r\n        }\r\n        return 0;\r\n    },\r\n    \r\n    bfs: function(startVertex, findVertex){\r\n        return bfsRec([[startVertex]], findVertex)"],[0,";\r\n "]],"start1":3371,"start2":3371,"length1":27,"length2":208},{"diffs":[[0,"hs,vFind"],[-1,", path"],[0,"){    //"]],"start1":3616,"start2":3616,"length1":22,"length2":16},{"diffs":[[0,"hs;\r\n        }\r\n"],[1,"        else{\r\n    "],[0,"        this.bfs"]],"start1":4723,"start2":4723,"length1":32,"length2":51},{"diffs":[[0,"s, vFind);\r\n"],[1,"        }\r\n"],[0,"    },\r\n    "]],"start1":4785,"start2":4785,"length1":24,"length2":35}]],"length":5266,"saved":false}
{"ts":1357855452391,"patch":[[{"diffs":[[0,"   if(pa"],[-1,")"],[1,"ths.length === 0){\r\n                return 2;\r\n            }"],[0,"\r\n      "]],"start1":3425,"start2":3425,"length1":17,"length2":76}]],"length":5325,"saved":false}
{"ts":1357855517284,"patch":[[{"diffs":[[0," return "],[1,"this."],[0,"bfsRec(["]],"start1":3591,"start2":3591,"length1":16,"length2":21}]],"length":5330,"saved":false}
{"ts":1357855523129,"patch":[[{"diffs":[[0,"paths = "],[1,"this."],[0,"bfs(1, t"]],"start1":3383,"start2":3383,"length1":16,"length2":21}]],"length":5335,"saved":false}
{"ts":1357855727716,"patch":[[{"diffs":[[0,"Paths = 0;\r\n"],[1,"        var g = this.clone();\r\n"],[0,"        \r\n  "]],"start1":3839,"start2":3839,"length1":24,"length2":55}]],"length":5366,"saved":false}
{"ts":1357855779643,"patch":[[{"diffs":[[0,"Graph = "],[-1,"this"],[1,"g"],[0,".dim; j "]],"start1":4333,"start2":4333,"length1":20,"length2":17},{"diffs":[[0,"Edges = "],[-1,"this"],[1,"g"],[0,".get(vPa"]],"start1":4405,"start2":4405,"length1":20,"length2":17},{"diffs":[[0,"            "],[-1,"this"],[1,"g"],[0,".set(vPathEn"]],"start1":4597,"start2":4597,"length1":28,"length2":25},{"diffs":[[0,"        "],[-1,"this"],[1,"g"],[0,".bfsRec("]],"start1":4849,"start2":4849,"length1":20,"length2":17}]],"length":5354,"saved":false}
