{"ts":1358445854212,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Game.Game = new Class({\r\n    initialize: function(initGraphRepresentation){\r\n        this.levels = [];\r\n        this.initLevels();\r\n        \r\n        this.curLevelIndex = 0;\r\n        if(Game.Game.isValidGraphString(initGraphRepresentation)){\r\n            this.curLevel = new Game.Level(initGraphRepresentation);\r\n        }\r\n        else{\r\n            this.curLevel = new Game.Level(this.levels[this.curLevelIndex]);\r\n        }\r\n        //this.player = new Game.Player();\r\n        \r\n    },\r\n    \r\n    initLevels: function(){\r\n        var i = 0;\r\n        this.levels[i++] = \"7; 1;1;1;0;0;0; 0;1;1;0;0; 1;0;1;0; 1;1;0; 0;1; 1;\";\r\n        \r\n        this.levels[i++] = \"2;1\";\r\n        this.levels[i++] = \"3;1;1;1\";\r\n        this.levels[i++] = \"3;1;0;2\";\r\n        this.levels[i++] = \"7; 1;1;1;0;0;0; 0;1;1;0;0; 1;0;1;0; 1;1;0; 0;1; 1;\";\r\n        this.levels[i++] = \"9; 1;1;1;0;0;0;0;0; 0;0;0;0;0;0;1; 1;0;1;1;0;0; 1;0;1;0;1; 0;1;1;1; 1;0;0; 1;0; 0; \";\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n        \r\n    },\r\n    \r\n    join: function(v1, v2){\r\n        this.curLevel.graph.join(v1,v2);\r\n    },\r\n    \r\n    cut: function(v1, v2){\r\n        this.curLevel.graph.cut(v1,v2);\r\n    },\r\n    \r\n    initLevel: function(graphAsStringRepres){\r\n        this.curLevel = new Game.Level(graphAsStringRepres);\r\n    },\r\n\r\n});\r\n\r\nGame.Game.isValidGraphString = function(s){   \r\n    s = Game.Game.standarizeGraphString(s);\r\n    \r\n    var arr = s.split(\";\");\r\n    if(arr.length < 1){\r\n        return false;\r\n    }\r\n    var dim = parseInt(arr[0], 10);\r\n    if((arr.length-1) != ((dim+1)*dim)/2 - dim){     // symmetric and no diagonal (-dim)\r\n        //console.log(\"in Level:decodeStringToGraph: sizes do not match. Expected: \" + ( ((dim+1)*dim)/2 - dim) + \"got: \" + (arr.length-1));\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nGame.Game.standarizeGraphString = function(s){\r\n    s = s.replace(/ /g, \"\");    // remove all whitespaces\r\n    while(s.charAt(s.length - 1) == \";\") s = s.slice(0, -1);        // remove ending in ;;;;;\r\n    var arr = s.split(\";\");\r\n    \r\n    for(var c = 0, l = arr.length; c < l; c++){\r\n        if(isNaN(parseInt(arr[c]))){\r\n            arr[c] = \"\";\r\n        }\r\n        else{\r\n            arr[c] = parseInt(arr[c], 10).toString();\r\n        }\r\n    }\r\n    \r\n    return arr.join(\";\");\r\n};\r\n"]],"start1":0,"start2":0,"length1":0,"length2":2287}]],"length":2287}
