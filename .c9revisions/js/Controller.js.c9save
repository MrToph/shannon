{"ts":1357080856354,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Game.Controller = new Class({\r\n    initialize: function(model){\r\n       // init Model\r\n       this.model = model;\r\n       this.running = false;\r\n       this.left = false;\r\n       this.right = false;\r\n       this.moveTick = 0;\r\n       this.moveLimit = 0;\r\n       \r\n       // representation is a global var\r\n       representation.addEvent('endLevelAnimFinished', this.onEndLevelAnimFinished.bind(this));\r\n       representation.addEvent('nextLevelAnimFinished', this.onNextLevelAnimFinished.bind(this));\r\n       \r\n       // handle keyboard\r\n       this.keyboard = new Keyboard({\r\n            defaultEventType: 'keydown',\r\n            events: {\r\n                'left': this.leftDown.bind(this),\r\n                'right': this.rightDown.bind(this),\r\n                'keyup:left': this.leftUp.bind(this),\r\n                'keyup:right': this.rightUp.bind(this),\r\n                'keyup:space': this.resetLevel.bind(this),\r\n            }\r\n        });\r\n        this.keyboard.activate();\r\n    },\r\n    \r\n    handleTicks: function(frames){\r\n        if(frames <= 0) return;                     // no new frame => do nothing\r\n        \r\n        if(this.running){\r\n            for(var i = 0; i < frames; i++){\r\n                \r\n                this.model.curLevel.handleSingleTick();\r\n                this.model.player.handleSingleTick();\r\n            }\r\n            \r\n            // set players mesh accordingly\r\n            this.model.player.alignPlayer();    \r\n            \r\n            \r\n            // set camera\r\n            this.model.handleCamera();\r\n            \r\n            if(this.collisionDetect()){\r\n                this.running = false;   \r\n            }\r\n            \r\n            \r\n            // check if we hit next level\r\n            if(false){\r\n                this.running = false;\r\n                representation.endLevelAnim();    \r\n            }\r\n        }\r\n    },\r\n    \r\n    leftDown: function(){\r\n        this.left = true;\r\n        this.model.player.moveDirection(+1);\r\n    },\r\n    \r\n    rightDown: function(){\r\n        this.right = true;\r\n        this.model.player.moveDirection(-1);\r\n    },\r\n    \r\n    leftUp: function(){\r\n        this.left = false;\r\n        this.moveTick = this.moveLimit - 1;\r\n    },\r\n    \r\n    rightUp: function(){\r\n        this.right = false;\r\n        this.moveTick = this.moveLimit - 1;\r\n    },\r\n    \r\n    collisionDetect: function(){\r\n        var player = this.model.player;\r\n        var dir = player.direction;\r\n        var segments = player.splineSegments;\r\n        var curSegment = Math.floor(player.arcLengthPos * segments);\r\n        var hit = false;\r\n        for(var i = curSegment-1, limit = curSegment+1; i <= limit; i++){\r\n            var blockables = this.model.curLevel.blockables[i % segments];\r\n            if(!blockables) continue;           // undefined or null\r\n//            var intersects = player.mesh.intersectObjects(blockables);\r\n//            if(intersects.length > 0){\r\n//                return true;   \r\n//            }\r\n            //console.log(blockables);\r\n            blockables.each(function(obj, index){\r\n                if(index === dir){\r\n                    hit = true;    \r\n                }\r\n            }, this);\r\n        }\r\n        return hit;\r\n    },\r\n    \r\n    resetLevel: function(){\r\n        console.log(\"RESTART!\");\r\n        this.running = false;\r\n        this.model.resetLevel();\r\n        this.running = true;\r\n    },\r\n    \r\n    onEndLevelAnimFinished: function(){     // this points to representation\r\n        var tmp = this.model.curLevel;\r\n        if(tmp !== null){\r\n           representation.scene.remove(tmp.spline); \r\n        }\r\n        \r\n        // init next level\r\n        this.model.initNextLevel();\r\n        tmp = this.model.curLevel.spline;\r\n        \r\n        console.log(tmp);\r\n        console.log(tmp.children[0].geometry);\r\n        \r\n        representation.nextLevelAnim();\r\n    },\r\n    \r\n    onNextLevelAnimFinished: function(){    // this points to representation\r\n          this.running = true;\r\n    }\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":4006}]],"length":4006}
{"contributors":[],"silentsave":false,"ts":1357080928540,"patch":[[{"diffs":[[0,"    "],[-1,"this.left = false;\r\n       this.right = false;\r\n       this.moveTick = 0;\r\n       this.moveLimit = 0;\r\n       "],[0,""],[1,""],[0,"\r\n  "]],"start1":148,"start2":148,"length1":118,"length2":8},{"diffs":[[0,");\r\n"],[-1,"       \r\n       // handle keyboard\r\n       this.keyboard = new Keyboard({\r\n            defaultEventType: 'keydown',\r\n            events: {\r\n                'left': this.leftDown.bind(this),\r\n                'right': this.rightDown.bind(this),\r\n                'keyup:left': this.leftUp.bind(this),\r\n                'keyup:right': this.rightUp.bind(this),\r\n                'keyup:space': this.resetLevel.bind(this),\r\n            }\r\n        });\r\n        this.keyboard.activate();\r\n    },\r\n    \r\n    handleTicks"],[1,"\r\n    },\r\n    \r\n    initLevel"],[0,": fu"]],"start1":388,"start2":388,"length1":516,"length2":37},{"diffs":[[0,"unction("],[-1,"frames"],[0,"){\r\n    "]],"start1":424,"start2":424,"length1":22,"length2":16},{"diffs":[[0,"    "],[-1,"leftDown"],[1,"restartLevel"],[0,": fu"]],"start1":1289,"start2":1289,"length1":16,"length2":20},{"diffs":[[0,"his."],[-1,"left = true;\r\n        this.model.player.moveDirection(+1"],[1,"initLevel(curLevel"],[0,");\r\n"]],"start1":1329,"start2":1329,"length1":64,"length2":26}]],"length":3377,"saved":false}
{"ts":1357081003148,"patch":[[{"diffs":[[0,"Level: function("],[1,"isHuman1, isHuman2"],[0,"){\r\n        this"]],"start1":1300,"start2":1300,"length1":32,"length2":50}]],"length":3395,"saved":false}
{"ts":1357081088888,"patch":[[{"diffs":[[0,"    "],[-1,"rightDown"],[1,"nextLevel"],[0,": fu"]],"start1":1387,"start2":1387,"length1":17,"length2":17},{"diffs":[[0,"){\r\n"],[-1,"        this.right = true;"],[1,"\r\n    },"],[0,"\r\n    "],[1,"\r\n"],[0,"    "],[-1,"this.model.player.moveDirection(-1);\r\n    },\r\n"],[1,"doMove: function(v1, v2){    "],[0,"    "],[-1,"\r\n"],[1,"  "],[0,"    "],[-1,"leftUp: function(){\r\n        this.left = false;\r\n        this.moveTick = this.moveLimit - 1;"],[1," // vertex 1 vertex 2\r\n        // is a valid move?\r\n        \r\n        // valid move => do it\r\n        \r\n        // set up next players turn"],[0,"\r\n  "]],"start1":1411,"start2":1411,"length1":192,"length2":206}]],"length":3409,"saved":false}
{"ts":1357081266761,"patch":[[{"diffs":[[0,"se;\r\n       "],[-1,""],[0,""],[1,"this.isHuman1 = true;\r\n       "],[0,"\r\n       // "]],"start1":140,"start2":140,"length1":24,"length2":54},{"diffs":[[0,"    "],[-1,"if(frames <= 0) return;                     // no new frame => do nothing\r\n        \r\n        if(this.running){\r\n            for(var i = 0; i < frames; i++){\r\n                \r\n                this.model.curLevel.handleSingleTick();\r\n                this.model.player.handleSingleTick();\r\n            }\r\n            \r\n            // set players mesh accordingly\r\n            this.model.player.alignPlayer();    \r\n            \r\n            \r\n            // set camera\r\n            this.model.handleCamera();\r\n            \r\n            if(this.collisionDetect()){\r\n                this.running = false;   \r\n            }\r\n            \r\n            \r\n            // check if we hit next level\r\n            if(false){\r\n                this.running = false;\r\n                representation.endLevelAnim();    \r\n            }\r\n        }\r\n    },\r\n    \r\n    restartLevel: function(isHuman1, isHuman2){\r\n        this.initLevel(curLevel);\r\n    },\r\n    \r\n    nextLevel: function(){\r\n\r\n    },\r\n    \r\n    doMove: function(v1, v2){               // vertex 1 vertex 2\r\n        // is a valid move?\r\n        \r\n        // valid move => do it\r\n        \r\n        // set up next players turn\r\n    },\r\n    \r\n    rightUp: function(){\r\n        this.right = false;\r\n        this.moveTick = this.moveLimit - 1;\r\n    },\r\n    \r\n    collisionDetect: function(){\r\n        var player = this.model.player;\r\n        var dir = player.direction;\r\n        var segments = player.splineSegments;\r\n        var curSegment = Math.floor(player.arcLengthPos * segments);\r\n        var hit = false;\r\n        for(var i = curSegment-1, limit = curSegment+1; i <= limit; i++){\r\n            var blockables = this.model.curLevel.blockables[i % segments];\r\n            if(!blockables) continue;           // undefined or null\r\n//            var intersects = player.mesh.intersectObjects(blockables);\r\n//            if(intersects.length > 0){\r\n//                return true;   \r\n//            }\r\n            //console.log(blockables);\r\n            blockables.each(function(obj, index){\r\n                if(index === dir){\r\n                    hit = true;    \r\n                }\r\n            }, this);\r\n        }\r\n        return hit;\r\n    },\r\n    \r\n    resetLevel: function(){\r\n        console.log(\"RESTART!\");\r\n        this.running = false;\r\n        this.model.resetLevel();\r\n        this.running = true;"],[1,"\r\n    },\r\n    \r\n    restartLevel: function(isHuman1, isHuman2){\r\n        this.initLevel(curLevel);\r\n    },\r\n    \r\n    nextLevel: function(){\r\n\r\n    },\r\n    \r\n    doMove: function(v1, v2){               // vertex 1 vertex 2\r\n        // is a valid move?\r\n        \r\n        // valid move => do it\r\n        \r\n        // set up next players turn"],[0,"\r\n  "]],"start1":470,"start2":470,"length1":2359,"length2":348}]],"length":1428,"saved":false}
{"ts":1357081277438,"patch":[[{"diffs":[[0,"n1 = true;\r\n"],[1,"       this.isHuman2 = false;\r\n"],[0,"       \r\n   "]],"start1":163,"start2":163,"length1":24,"length2":55}]],"length":1459,"saved":false}
{"ts":1357081315835,"patch":[[{"diffs":[[0,"isHuman2){\r\n"],[1,"        this.isHuman1 = isHuman1;\r\n        this.isHuman2 = isHuman2;\r\n"],[0,"        this"]],"start1":558,"start2":558,"length1":24,"length2":94}]],"length":1529,"saved":false}
{"ts":1357081411048,"patch":[[{"diffs":[[0,"l: function("],[1,"graphAsStringRepres"],[0,"){\r\n        "]],"start1":481,"start2":481,"length1":24,"length2":43},{"diffs":[[0,"itLevel("],[-1,"curLevel"],[1,"this.model.curLevel.stringRepresentation"],[0,");\r\n    "]],"start1":674,"start2":674,"length1":24,"length2":56}]],"length":1580,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357407877077,"patch":[[{"diffs":[[0,"){\r\n        "],[1,"this.model.initLevel(graphAsStringRepres);"],[0,"\r\n    },\r\n  "]],"start1":512,"start2":512,"length1":24,"length2":66},{"diffs":[[0,"  },\r\n    \r\n"],[1,"    setUrl: function(){\r\n        window.location.hash = \"ABCDE\"  \r\n        \r\n    },\r\n    \r\n"],[0,"    onEndLev"]],"start1":1012,"start2":1012,"length1":24,"length2":115}]],"length":1713,"saved":false}
{"ts":1357407878923,"patch":[[{"diffs":[[0," \"ABCDE\""],[1,";"],[0,"  \r\n    "]],"start1":1079,"start2":1079,"length1":16,"length2":17}]],"length":1714,"saved":false}
{"ts":1357407889954,"patch":[[{"diffs":[[0,"ngRepres);\r\n"],[1,"        setUrl();\r\n"],[0,"    },\r\n    "]],"start1":556,"start2":556,"length1":24,"length2":43}]],"length":1733,"saved":false}
{"ts":1357407915739,"patch":[[{"diffs":[[0,");\r\n        "],[1,"this."],[0,"setUrl();\r\n "]],"start1":564,"start2":564,"length1":24,"length2":29}]],"length":1738,"saved":false}
{"ts":1357408261362,"patch":[[{"diffs":[[0,".setUrl("],[1,"this.model.curLevel.graph.stringRepresentation"],[0,");\r\n    "]],"start1":580,"start2":580,"length1":16,"length2":62},{"diffs":[[0,"l: function("],[1,"s"],[0,"){\r\n        "]],"start1":1103,"start2":1103,"length1":24,"length2":25},{"diffs":[[0,"h = "],[-1,"\"ABCDE\";  \r\n      "],[1,"s;"],[0,"  \r\n"]],"start1":1147,"start2":1147,"length1":26,"length2":10}]],"length":1769,"saved":false}
{"ts":1357408308203,"patch":[[{"diffs":[[0,"vel."],[-1,"graph."],[0,"stri"]],"start1":604,"start2":604,"length1":14,"length2":8}]],"length":1763,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357580388492,"patch":[[{"diffs":[[0,"on\r\n"],[-1,"        var tmp = this.model.curLevel;\r\n        if(tmp !== null){\r\n           representation.scene.remove(tmp.spline); \r\n        }\r\n        \r\n        // init next level\r\n        this.model.initNextLevel();\r\n        tmp = this.model.curLevel.spline;\r\n        \r\n        console.log(tmp);\r\n        console.log(tmp.children[0].geometry);\r\n"],[0,"    "]],"start1":1239,"start2":1239,"length1":343,"length2":8}]],"length":1428,"saved":false}
{"ts":1357580398171,"patch":[[{"diffs":[[0,"representation\r\n"],[1,"        // ... do something\r\n"],[0,"        \r\n      "]],"start1":1227,"start2":1227,"length1":32,"length2":61}]],"length":1457,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357665967642,"patch":[[{"diffs":[[0,"n(v1, v2"],[1,", edgeOpt"],[0,"){      "]],"start1":909,"start2":909,"length1":16,"length2":25}]],"length":1466,"saved":false}
{"ts":1357666012370,"patch":[[{"diffs":[[0,"2 = false;\r\n"],[1,"       this.p1Turn = true;\r\n"],[0,"       \r\n   "]],"start1":194,"start2":194,"length1":24,"length2":52},{"diffs":[[0,"  },\r\n    \r\n"],[1,"    isValidMove(v1, v2, )\r\n    \r\n"],[0,"    setUrl: "]],"start1":1113,"start2":1113,"length1":24,"length2":57}]],"length":1527,"saved":false}
{"ts":1357666021311,"patch":[[{"diffs":[[0,"uman2;\r\n"],[1,"        this.p1Turn = true;\r\n"],[0,"        "]],"start1":785,"start2":785,"length1":16,"length2":45}]],"length":1556,"saved":false}
{"ts":1357666041599,"patch":[[{"diffs":[[0,"v1, v2, "],[-1,")"],[1,"p1Turn){\r\n        \r\n    }"],[0,"\r\n    \r\n"]],"start1":1170,"start2":1170,"length1":17,"length2":41}]],"length":1580,"saved":false}
{"ts":1357666058053,"patch":[[{"diffs":[[0,"    "],[-1,"// is a v"],[1,"if(this.isV"],[0,"alid"],[-1," move?"],[1,"Move(v1,v2,this.p1Turn)){\r\n            \r\n        }"],[0,"\r\n  "]],"start1":1026,"start2":1026,"length1":27,"length2":73}]],"length":1626,"saved":false}
{"ts":1357666093211,"patch":[[{"diffs":[[0,"){\r\n        "],[1,"if(this.model.curLevel.graph.get(v1,v2) > 0){\r\n            return truel\r\n        }\r\n        return false;"],[0,"\r\n    }\r\n   "]],"start1":1230,"start2":1230,"length1":24,"length2":129}]],"length":1731,"saved":false}
{"ts":1357666094124,"patch":[[{"diffs":[[0,"urn true"],[-1,"l"],[1,";"],[0,"\r\n      "]],"start1":1304,"start2":1304,"length1":17,"length2":17}]],"length":1731,"saved":false}
{"ts":1357666173932,"patch":[[{"diffs":[[0,"\n        if("],[1,"! "],[0,"this.isValid"]],"start1":1021,"start2":1021,"length1":24,"length2":26},{"diffs":[[0,"){\r\n            "],[1,"return false;"],[0,"\r\n        }\r\n   "]],"start1":1070,"start2":1070,"length1":32,"length2":45}]],"length":1746,"saved":false}
{"ts":1357666196584,"patch":[[{"diffs":[[0," do it\r\n"],[1,"        if(this.p1Turn){\r\n            \r\n        }\r\n        else{\r\n            \r\n        }\r\n"],[0,"        "]],"start1":1146,"start2":1146,"length1":16,"length2":107}]],"length":1837,"saved":false}
{"ts":1357666207883,"patch":[[{"diffs":[[0,"s turn\r\n"],[1,"        this.p1Turn = !this.p1Turn;\r\n"],[0,"    },\r\n"]],"start1":1284,"start2":1284,"length1":16,"length2":53}]],"length":1874,"saved":false}
{"ts":1357666217677,"patch":[[{"diffs":[[0," isValidMove"],[1,": function"],[0,"(v1, v2, p1T"]],"start1":1346,"start2":1346,"length1":24,"length2":34},{"diffs":[[0,"alse;\r\n    }"],[1,","],[0,"\r\n    \r\n    "]],"start1":1495,"start2":1495,"length1":24,"length2":25}]],"length":1885,"saved":false}
{"ts":1357666265805,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"this.model.curLevel.graph."],[0,"\r\n        }\r\n   "]],"start1":1176,"start2":1176,"length1":32,"length2":58}]],"length":1911,"saved":false}
{"ts":1357666550751,"patch":[[{"diffs":[[0,"s.model."],[-1,"curLevel.graph."],[1,"join(v1,v2);"],[0,"\r\n      "]],"start1":1195,"start2":1195,"length1":31,"length2":28},{"diffs":[[0,"e{\r\n            "],[1,"this.model.cut(v1,v2);"],[0,"\r\n        }\r\n   "]],"start1":1239,"start2":1239,"length1":32,"length2":54}]],"length":1930,"saved":false}
{"ts":1357666831171,"patch":[[{"diffs":[[0,"rtex 2\r\n"],[1,"        if(v1 > v2){\r\n            var tmp = v1;\r\n            v2 = v1;\r\n            v1 = tmp;\r\n        }\r\n        \r\n"],[0,"        "]],"start1":1014,"start2":1014,"length1":16,"length2":131}]],"length":2045,"saved":false}
{"ts":1357666845142,"patch":[[{"diffs":[[0," var tmp = v"],[-1,"1"],[1,"2"],[0,";\r\n         "]],"start1":1055,"start2":1055,"length1":25,"length2":25}]],"length":2045,"saved":false}
{"ts":1357668899349,"patch":[[{"diffs":[[0,"l.join(v1,v2);\r\n"],[1,"            representation.markEdge(v1,v2,edgeOpt);\r\n"],[0,"        }\r\n     "]],"start1":1316,"start2":1316,"length1":32,"length2":85}]],"length":2098,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357767865962,"patch":[[{"diffs":[[0,",edgeOpt);\r\n"],[1,"            representation.renameModels(v1, v2);\r\n"],[0,"        }\r\n "]],"start1":1373,"start2":1373,"length1":24,"length2":74},{"diffs":[[0,"1,v2);\r\n        "],[-1,"}"],[1,"    representation.cutEdge(v1,v2,edgeOpt);\r\n        }\r\n        this.checkGameOver();"],[0,"\r\n        \r\n    "]],"start1":1489,"start2":1489,"length1":33,"length2":116},{"diffs":[[0,"h = s;  \r\n    },"],[-1,""],[0,""],[1,"\r\n    \r\n    checkGameOver: function(v1, v2, p1Turn){\r\n        if(p1Turn){\r\n            if(v1 === 1 && v2 === this.model.curLevel.graph.dim){\r\n                return true;\r\n            }\r\n        }\r\n    }"],[0,"\r\n    \r\n    onEn"]],"start1":1915,"start2":1915,"length1":32,"length2":235}]],"length":2434,"saved":false}
{"ts":1357767880084,"patch":[[{"diffs":[[0,"\n        }\r\n"],[1,"        else{   // cut's turn\r\n            \r\n        }\r\n        return false;\r\n"],[0,"    }\r\n    \r"]],"start1":2117,"start2":2117,"length1":24,"length2":103}]],"length":2513,"saved":false}
{"ts":1357767959141,"patch":[[{"diffs":[[0,"    "],[-1,"this.checkGameOver();"],[1,"\r\n        var over = this.checkGameOver();\r\n        if(over !== 0){\r\n            \r\n        }"],[0,"\r\n  "]],"start1":1564,"start2":1564,"length1":29,"length2":100},{"diffs":[[0,"v1, v2, p1Turn){"],[1,"    // returns 0 if game is not yet over, 1 if join won, and 2 if cut won"],[0,"\r\n        if(p1T"]],"start1":2038,"start2":2038,"length1":32,"length2":105},{"diffs":[[0,"ph.dim){"],[1,"   // join just joined v1 and v2"],[0,"\r\n      "]],"start1":2207,"start2":2207,"length1":16,"length2":48},{"diffs":[[0,"         return "],[-1,"true"],[1,"1"],[0,";\r\n            }"]],"start1":2256,"start2":2256,"length1":36,"length2":33},{"diffs":[[0,"\n        return "],[-1,"false"],[1,"0"],[0,";\r\n    }\r\n    \r\n"]],"start1":2357,"start2":2357,"length1":37,"length2":33}]],"length":2682,"saved":false}
{"ts":1357767971563,"patch":[[{"diffs":[[0,"ameOver("],[1,"v1, v2, this.p1Turn"],[0,");\r\n    "]],"start1":1600,"start2":1600,"length1":16,"length2":35}]],"length":2701,"saved":false}
{"ts":1357768021426,"patch":[[{"diffs":[[0,"rn\r\n            "],[1,"// depth search/ breadth search from v1 to v2, if no path exists => cut won"],[0,"\r\n        }\r\n   "]],"start1":2348,"start2":2348,"length1":32,"length2":107}]],"length":2776,"saved":false}
{"ts":1357768055616,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"if(over === 1){ // join won\r\n                console.log(\"JOIN WIN\");\r\n            }\r\n            else{\r\n                \r\n            }"],[0,"\r\n        }\r\n   "]],"start1":1652,"start2":1652,"length1":32,"length2":168}]],"length":2912,"saved":false}
{"ts":1357768062112,"patch":[[{"diffs":[[0,"                "],[1," console.log(\"CUT WIN\");"],[0,"\r\n            }\r"]],"start1":1773,"start2":1773,"length1":32,"length2":56}]],"length":2936,"saved":false}
{"ts":1357768063569,"patch":[[{"diffs":[[0,"                "],[-1," "],[0,"console.log(\"CUT"]],"start1":1773,"start2":1773,"length1":33,"length2":32}]],"length":2935,"saved":false}
{"ts":1357768084137,"patch":[[{"diffs":[[0,"rn 0;\r\n    }"],[1,","],[0,"\r\n    \r\n    "]],"start1":2623,"start2":2623,"length1":24,"length2":25}]],"length":2936,"saved":false}
{"ts":1357768865128,"patch":[[{"diffs":[[0,"aph."],[-1,"dim"],[1,"endVertex"],[0,"){  "]],"start1":2384,"start2":2384,"length1":11,"length2":17}]],"length":2942,"saved":false}
{"ts":1357768993776,"patch":[[{"diffs":[[0,"1 &&"],[-1," v2 ==="],[0," thi"]],"start1":2350,"start2":2350,"length1":15,"length2":8},{"diffs":[[0,"ndVertex"],[1," === 1"],[0,"){   // "]],"start1":2382,"start2":2382,"length1":16,"length2":22}]],"length":2941,"saved":false}
{"ts":1357769102387,"patch":[[{"diffs":[[0," = this."],[-1,"checkGameOv"],[1,"model.curLevel.graph.getWinn"],[0,"er(v1, v"]],"start1":1586,"start2":1586,"length1":27,"length2":44},{"diffs":[[0,"  \r\n"],[-1,"    checkGameOver: function(v1, v2, p1Turn){    // returns 0 if game is not yet over, 1 if join won, and 2 if cut won\r\n        if(p1Turn){\r\n            if(v1 === 1 && this.model.curLevel.graph.endVertex === 1){   // join just joined v1 and v2\r\n                return 1;\r\n            }\r\n        }\r\n        else{   // cut's turn\r\n            // depth search/ breadth search from v1 to v2, if no path exists => cut won\r\n        }\r\n        return 0;\r\n    },\r\n    \r\n"],[0,"    "]],"start1":2201,"start2":2201,"length1":469,"length2":8}]],"length":2497,"saved":false}
