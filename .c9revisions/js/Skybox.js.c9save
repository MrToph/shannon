{"ts":1357164219660,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Game.Game = new Class({\r\n    initialize: function(){\r\n        this.levels = [];\r\n        this.initLevels();\r\n        \r\n        this.curLevelIndex = 0;\r\n        this.curLevel = new Game.Level(this.levels[this.curLevelIndex]);\r\n        //this.player = new Game.Player();\r\n        \r\n    },\r\n    \r\n    initLevels: function(){\r\n        var i = 0;\r\n        this.levels[i++] = \"3;1;0;2\"\r\n    },\r\n    \r\n    initLevel: function(graphAsStringRepres){\r\n        this.curLevel = new Game.Level(graphAsStringRepres);\r\n    },\r\n\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":517}]],"length":517}
{"contributors":[],"silentsave":false,"ts":1357207648092,"patch":[[{"diffs":[[0,"3;1;0;2\""],[1,";\r\n        this.levels[i++] = \"10;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1\";\r\n        \r\n        "],[0,"\r\n    },"]],"start1":371,"start2":371,"length1":16,"length2":161}]],"length":662,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357233910455,"patch":[[{"diffs":[[0,"Game."],[-1,"Game"],[1,"Skybox"],[0," = new C"]],"start1":0,"start2":0,"length1":17,"length2":19},{"diffs":[[0,"alize: function("],[1,"size"],[0,"){\r\n        this"]],"start1":36,"start2":36,"length1":32,"length2":36},{"diffs":[[0,"his."],[-1,"levels = [];\r\n        this.initLevels();\r\n        \r\n        this.curLevelIndex = 0;\r\n        this.curLevel = new Game.Level(this.levels[this.curLevelIndex]);\r\n        //this.player = new Game.Player();\r\n        \r\n    },\r\n    \r\n    initLevels: function(){\r\n        var i = 0;\r\n        this.levels[i++] = \"3;1;0;2\";\r\n        this.levels[i++] = \"10;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1\";\r\n        \r\n        \r\n    },\r\n    \r\n    initLevel: function(graphAsStringRepre"],[1,"size = size;\r\n        //var urls\t= Game.Utils.UrlsPx(\"images/skybox/red/\", \".jpg\");\r\n\r\n    \t//var urls\t= Game.Utils.UrlsPx(\"images/skybox/mountain/\", \".jpg\");\r\n        \r\n    \tvar urls\t= Game.Utils.UrlsPx(\"images/skybox/castle/\", \".jpg\");\r\n        //var urls    = Game.Utils.UrlsPx(\"images/skybox/moonlight/\", \".jpg\");\r\n        //var urls    = Game.Utils.UrlsPx(\"images/skybox/colors/\", \".jpg\");\r\n        var urls    = Game.Utils.UrlsPx(\"images/skybox/interstellar/\", \".jpg\");\r\n        \r\n        this.texturePlaceholder;\r\n        this.texturePlaceholder = document.createElement( 'canvas' );\r\n\t\tthis.texturePlaceholder.width = 128;\r\n\t\tthis.texturePlaceholder.height = 128;\r\n\r\n\t\tvar context = this.texturePlaceholder.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'rgb( 200, 200, 200 )';\r\n\t\tcontext.fillRect( 0, 0, this.texturePlaceholder.width, this.texturePlaceholder.height );\r\n        \r\n        var materials = [\r\n\t\t\tthis.loadTexture( urls[0] ), // right\r\n\t\t\tthis.loadTexture( urls[1] ), // left\r\n\t\t\tthis.loadTexture( urls[2] ), // top\r\n\t\t\tthis.loadTexture( urls[3] ), // bottom\r\n\t\t\tthis.loadTexture( urls[4] ), // back\r\n\t\t\tthis.loadTexture( urls[5] )  // front\r\n\r\n\t\t];\r\n\t\r\n        this.mesh = new THREE.Mesh( new THREE.CubeGeometry( size, size, size, 7, 7, 7 ), new THREE.MeshFaceMaterial( materials ) );\r\n        this.mesh.scale.x = -1;    // flipSided = true analogon\r\n        //this.mesh.position.y = -200;\r\n    },\r\n    \r\n    initLevels: function(){\r\n        var i = 0;\r\n        this.levels[i++] = \"3;1;0;2\";\r\n        this.levels[i++] = \"10;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1\";\r\n        \r\n        \r\n    },\r\n    \r\n    loadTexture: function( path ) {\r\n\t\tvar texture = new THREE.Texture( this.texturePlaceholder );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { map: texture, overdraw: true } );\r\n\r\n\t\tvar image = new Image();\r\n\t\timage.onload = function () {\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\t\tmaterial.map.image = this;\r\n\r\n\t\t\trepresentation.render();\r\n\r\n\t\t};\r\n\t\timage.src = path;\r\n\r\n\t\treturn material;\r\n\t},\r\n    \r\n//    createMaterial: function(url"],[0,"s)"],[1," "],[0,"{\r\n"],[-1,"        this.curLevel = new Game.Level(graphAsStringRepres)"],[1,"//\treturn [\r\n//                new THREE.MeshBasicMaterial({map: THREE.ImageUtils.loadTexture(urls[0])}), // right\r\n//                new THREE.MeshBasicMaterial({map: THREE.ImageUtils.loadTexture(urls[1])}), // left\r\n//                new THREE.MeshBasicMaterial({map: THREE.ImageUtils.loadTexture(urls[2])}), //top\r\n//                new THREE.MeshBasicMaterial({map: THREE.ImageUtils.loadTexture(urls[3])}), // bottom\r\n//                new THREE.MeshBasicMaterial({map: THREE.ImageUtils.loadTexture(urls[4])}), // back\r\n//                new THREE.MeshBasicMaterial({map: THREE.ImageUtils.loadTexture(urls[5])}) // front\r\n//        ];\r\n//    },\r\n    \r\n    getMesh: function(){\r\n        return this.mesh"],[0,";\r\n "]],"start1":69,"start2":69,"length1":587,"length2":2827}]],"length":2908,"saved":false}
